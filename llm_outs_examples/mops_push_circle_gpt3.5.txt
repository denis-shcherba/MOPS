```python
def gen_plan(state: PushState, push_offsets: list):
    
    import numpy as np

    # Push the blocks to form a circle
    actions = []
    
    blocks = [state.getFrame("block0"), state.getFrame("block1"), state.getFrame("block2"), state.getFrame("block3"), state.getFrame("block4"), state.getFrame("block5")]
    
    circle_radius = 0.2
    circle_center = [0.0, 0.3]
    angle_increment = 2*np.pi / len(blocks)
    
    for i, block in enumerate(blocks):
        angle = i * angle_increment
        target_x = circle_center[0] + circle_radius * np.cos(angle)
        target_y = circle_center[1] + circle_radius * np.sin(angle)
        
        # Push start
        offset_mag = max(block.size[:2]) * 3
        start_x = block.x_pos - (block.x_pos - target_x) * 0.5 + push_offsets[i][0]
        start_y = block.y_pos - (block.y_pos - target_y) * 0.5 + push_offsets[i][1]
        
        # Push end
        end_x = target_x + push_offsets[i][2]
        end_y = target_y + push_offsets[i][3]
        
        actions.append(Action("pick", [block.name, None]))
        actions.append(Action("push_motion", [start_x, start_y, end_x, end_y]))

    return actions

def gen_initial_guess(initial: PushState):
    return [
        [.0, .0, .0, .0] for _ in range(6)  # BBO initial value for each push action
    ]
```